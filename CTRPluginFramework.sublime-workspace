{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"_is",
				"_isNew3DS"
			],
			[
				"g_r",
				"g_rowSize"
			],
			[
				"scr",
				"screenPos1"
			],
			[
				"g_",
				"g_bytePerPixel"
			],
			[
				"rowS",
				"g_rowSize"
			],
			[
				"g_ro",
				"g_rowSize"
			],
			[
				"GSP_",
				"GSP_BGR8_OES"
			],
			[
				"GSP",
				"GSPOffset"
			],
			[
				"G",
				"GSPOffset"
			],
			[
				"Io",
				"IoBasePdc"
			],
			[
				"add",
				"address"
			],
			[
				"addre",
				"address2"
			],
			[
				"dr",
				"drawString"
			],
			[
				"allF",
				"allFolderFile"
			],
			[
				"g",
				"g_region"
			],
			[
				"ski",
				"skill_address"
			],
			[
				"WRITE",
				"WRITEU8"
			],
			[
				"WE",
				"WEAPONSMITHING"
			],
			[
				"Ga",
				"GARMENT"
			],
			[
				"t_key",
				"t_keyboardContent"
			],
			[
				"key",
				"keyboard"
			],
			[
				"refresh_",
				"refresh_object_infos"
			],
			[
				"dis",
				"display"
			],
			[
				"item",
				"item_search_u32"
			],
			[
				"res",
				"restore_menu"
			],
			[
				"new_",
				"new_entry_managed"
			],
			[
				"ref",
				"refresh_object_infos"
			],
			[
				"dam",
				"damdef"
			],
			[
				"t_",
				"t_object"
			],
			[
				"EDITR",
				"EDITOR_MENU"
			],
			[
				"t",
				"t_weapon"
			],
			[
				"too",
				"toolsTypeList"
			],
			[
				"user",
				"userChoice"
			],
			[
				"tool",
				"toolsHint"
			],
			[
				"update",
				"update_key"
			],
			[
				"left",
				"leftArrowKey"
			],
			[
				"is",
				"isVisible"
			],
			[
				"content",
				"contentIndex"
			],
			[
				"t_ke",
				"t_keyboardContent"
			],
			[
				"cont",
				"contentCount"
			],
			[
				"ke",
				"keyboard"
			],
			[
				"B",
				"BUTTON_B"
			],
			[
				"u",
				"update"
			],
			[
				"up",
				"update"
			],
			[
				"upd",
				"updateScreen"
			],
			[
				"layou",
				"layoutType"
			],
			[
				"ma",
				"maxPage"
			],
			[
				"l",
				"layoutType"
			],
			[
				"set",
				"set_keys_layout"
			],
			[
				"last",
				"lastPage"
			],
			[
				"conte",
				"contentCount"
			],
			[
				"layout",
				"layoutType"
			],
			[
				"max",
				"max_length_content"
			],
			[
				"display",
				"display_keyboard_custom"
			],
			[
				"prin",
				"print_image_rgb"
			],
			[
				"t_k",
				"t_keyboard"
			],
			[
				"k",
				"keyboard"
			],
			[
				"margin",
				"marginY"
			],
			[
				"t_kay",
				"t_KeyboardContent"
			],
			[
				"new_entry",
				"new_entry_managed"
			],
			[
				"get",
				"get_user_input_dec"
			],
			[
				"let",
				"letterColor"
			],
			[
				"letter",
				"letterPosX"
			],
			[
				"t_keyb",
				"t_keyboardContent"
			],
			[
				"R",
				"R_SUCCEEDED"
			],
			[
				"ba",
				"base_addr"
			],
			[
				"prot",
				"protect_area_rw"
			],
			[
				"camera",
				"camera_zoom_outselectlenable_select"
			],
			[
				"BODY",
				"BODYEDITOR"
			],
			[
				"HEAD",
				"HEADEDITOR"
			],
			[
				"equi",
				"equipValue"
			],
			[
				"T_key",
				"t_keyboard"
			],
			[
				"DE",
				"DECIMAL_KEYBOARD"
			],
			[
				"edit",
				"edit_weapon_effect"
			],
			[
				"input",
				"inputColor"
			],
			[
				"hint",
				"hintColor"
			],
			[
				"use",
				"usePluginBackground"
			],
			[
				"press",
				"pressedColor"
			],
			[
				"displ",
				"display_keyboard"
			],
			[
				"p",
				"p_input"
			],
			[
				"COLOR",
				"COLOR_TRANSPARENT"
			],
			[
				"init",
				"init_keys"
			],
			[
				"lett",
				"letterPosY"
			],
			[
				"pos",
				"posY"
			],
			[
				"COLOR_LI",
				"COLOR_LIGHT_BLUE"
			],
			[
				"new",
				"new_unselectable_entry"
			],
			[
				"ex",
				"execute_funcpointer"
			],
			[
				"menu",
				"menuflags"
			],
			[
				"me",
				"menuflags"
			],
			[
				"Fun",
				"FuncPointerExecute"
			],
			[
				"s",
				"status"
			],
			[
				"Arg",
				"ArgToggleFunction"
			],
			[
				"g_e",
				"g_current_data_count"
			],
			[
				"un",
				"Unknown"
			],
			[
				"wand",
				"Wand"
			],
			[
				"print",
				"print_list"
			],
			[
				"WEA",
				"WEAPONCARPENTRY"
			],
			[
				"new_entr",
				"new_entry_managed"
			],
			[
				"ne",
				"new_entry_managed"
			],
			[
				"new_s",
				"new_separator"
			],
			[
				"TOG",
				"TOGGLE_ENABLE"
			],
			[
				"i",
				"identifier"
			],
			[
				"p_",
				"p_pattern"
			],
			[
				"ori",
				"original_size"
			],
			[
				"or",
				"original_size"
			],
			[
				"with",
				"with_size"
			],
			[
				"change",
				"change_menu_status"
			],
			[
				"E",
				"EDITOR"
			],
			[
				"refre",
				"refresh_menu_infos"
			],
			[
				"READ",
				"READU32"
			],
			[
				"byt",
				"bytesRead"
			],
			[
				"D",
				"DEFAULT_COLOR"
			],
			[
				"newApp",
				"newAppTop"
			],
			[
				"APT",
				"APT_PrepareToDoApplicationJump"
			],
			[
				"array",
				"array_length"
			],
			[
				"stat",
				"static"
			],
			[
				"wal",
				"walk_through_walls"
			],
			[
				"disabl",
				"disable_entry"
			],
			[
				"ho",
				"hooked_pc_option2"
			],
			[
				"hook",
				"hooked_pc_option1"
			],
			[
				"RE",
				"RESTORE_TP"
			],
			[
				"sa",
				"save_teleport"
			],
			[
				"g_te",
				"g_text_activated"
			],
			[
				"g_sa",
				"g_teleport_save"
			],
			[
				"text_",
				"g_text_activated"
			],
			[
				"pat",
				"pattern_size"
			],
			[
				"g_wh",
				"g_whateverthis1"
			],
			[
				"g_h",
				"g_whateverthis1"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 775.0,
		"last_filter": "Ins",
		"selected_items":
		[
			[
				"Ins",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Install Package Control"
			]
		],
		"width": 776.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Nanquitas/Desktop/github/CTRPluginFramework"
	],
	"file_history":
	[
		"/C/Users/Nanquitas/Desktop/github/CTRPluginFramework/README.md",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/3ds.ld",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/CTRPluginFramework/System.cpp",
		"/C/devkitPro/devkitARM/arm-none-eabi/lib/3dsx.ld",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/CTRPluginFramework.hpp",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/3DS.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/build.py",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/NTR/entry.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/main.cpp",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/bootloader.s",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/libntrplg/sharedfunc.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/libntrplg/ns/ns.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/3ds.ld",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/gameplg.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/types.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/thread.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/synchronization.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/svc.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/srv.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/result.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/os.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/ipc.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/gfx.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/font.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/env.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/services/hid.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/services/gspgpu.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/services/fs.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/services/apt.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/gpu/shbin.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/main.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/CTRPluginFramework/System.hpp",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/CTRPluginFramework_Plugin.map",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/CTRPluginFramework/main.hpp",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/ctrulib/thread.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/CTRPluginFramework/Screen.hpp",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/services/cfgu.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/gpu/shaderProgram.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/gpu/registers.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/gpu/gx.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/gpu/gpu-old.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/gpu/gpu.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/gfx.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/font.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/cfgu.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/newSrv.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/services/apt.c",
		"/C/Users/Nanquitas/AppData/Roaming/Sublime Text 3/Packages/User/_cpl.sublime-snippet",
		"/C/Users/Nanquitas/AppData/Roaming/Sublime Text 3/Packages/User/e_cpl.sublime-snippet",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/bootloader.s",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/gpu/enums.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/GamePatcher/Sources/ntr/entry.c",
		"/G/Backup From Burned/Desktop/Cheat_Gateway/libntrplg/Makefile",
		"/G/Backup From Burned/Desktop/Cheat_Gateway/libntrplg/include/libntrplg/global.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/utf8_to_utf16.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/utf32_to_utf16.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/utf16_to_utf8.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/encode_utf16.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/gpu/gpu-old.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/gpu/gpu.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/gpu/gx.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/gpu/shaderProgram.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/gpu/shbin.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/services/fs.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/services/gspgpu.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/utf32_to_utf8.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/utf8_to_utf32.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/utf16_to_utf32.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/encode_utf8.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/decode_utf8.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/utf/decode_utf16.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/synchronization.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/srv.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/os.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/internal.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Sources/ctrulib/env.c",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/services/gfx.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/common.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/libctr/font.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/Graphics/debug.c",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/Common/hid.c",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/allocator/vram.cpp",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/allocator/mappable.cpp",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/allocator/linear.cpp",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Sources/allocator/addrmap.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/utf.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/util/utf.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/memory.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/services/ipc.h",
		"/C/Users/Nanquitas/Desktop/New 3DS Lib/Includes/ctrulib/services/env.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/debug.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/configs.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/common.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/files.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/command_thread.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/cfgu.h",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/cheats.h",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/object_editor.c",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/keyboard.c",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/skills.c",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/notes.h",
		"/C/Users/Nanquitas/Desktop/github/Zelda-Ocarina-Of-Time-3D-Plugin/Sources/menu.c",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/helpers/manager.h",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/menu.c",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/util/utf.h",
		"/C/Users/Nanquitas/Desktop/github/PokemonSM_NTR_Cheats/Sources/utility_cheats.c",
		"/C/Users/Nanquitas/Desktop/github/PokemonSM_NTR_Cheats/Sources/menu.c",
		"/C/Users/Nanquitas/Desktop/github/Zelda-Ocarina-Of-Time-3D-Plugin/Includes/configs.h",
		"/C/Users/Nanquitas/Desktop/github/Zelda-Ocarina-Of-Time-3D-Plugin/Sources/font.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/build_dev.py",
		"/C/Users/Nanquitas/Desktop/github/Zelda-Ocarina-Of-Time-3D-Plugin/Includes/plugin.h",
		"/C/Users/Nanquitas/Desktop/github/NTR-Process-Dumper/Sources/regions_functions.c",
		"/C/Users/Nanquitas/Desktop/github/NTR-Process-Dumper/Sources/memory_functions.c",
		"/C/Users/Nanquitas/Desktop/github/NTR-Process-Dumper/Sources/main.c",
		"/C/Users/Nanquitas/Desktop/github/NTR-Process-Dumper/Sources/dumper.c",
		"/C/Users/Nanquitas/Downloads/Compressed/V1.7-1/searchinfile.py",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/build.py",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/keyboard.h",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Sources/cheats.c",
		"/C/Users/Nanquitas/Desktop/github/PokemonSM_NTR_Cheats/Includes/svc.h",
		"/C/Users/Nanquitas/Desktop/github/Zelda-Ocarina-Of-Time-3D-Plugin/Includes/hid.h",
		"/C/Users/Nanquitas/Desktop/github/Zelda-Ocarina-Of-Time-3D-Plugin/Includes/debug.h",
		"/C/Users/Nanquitas/Desktop/github/Zelda-Ocarina-Of-Time-3D-Plugin/Sources/config.h",
		"/C/Users/Nanquitas/Desktop/github/Zelda-Ocarina-Of-Time-3D-Plugin/Sources/cheats.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/ctr/svc.h",
		"/C/Users/Nanquitas/Desktop/libShark2NTR/libShark2NTR/Includes/os.h",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Includes/types.h",
		"/C/Users/Nanquitas/Desktop/fantasyLifeAnew/Includes/hid.h"
	],
	"find":
	{
		"height": 64.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"new",
			"g_weapon",
			"#include \"cheats.h\"\n#include \"notes.h\"\n#include \"svc.h\"\n#include \"result.h\"\n\n#define \tMOON_TID\t0x00175E00\n#define \tSUN_TID \t0x00164800\n\nchar\t*builder_name = \"Nanquitas\";\n\nvoid gfxFillColor(int screen, u32 fillcolor)\n{\n\tu32 i;\n\tu32 IoBaseLcd = plgGetIoBase(IO_BASE_LCD);\n\tfor (i = 0; i < 0x64; ++i )\n\t{\n\t\tif (screen == 3 || screen == 2)\n\t\t\t*(u32 *)(IoBaseLcd + 0x204) = fillcolor;\n\t\tif (screen == 3 || screen == 1)\n\t\t\t*(u32 *)(IoBaseLcd + 0xA04) = fillcolor;\n\t\tsvcSleepThread(5000000); // 0.005 second\n\t}\n\t*(u32*)(IoBaseLcd + 0x204) = 0;\n\t*(u32*)(IoBaseLcd + 0xA04) = 0;\n}\n\nvoid gfxFillColor2(u32 topcolor, u32 botcolor)\n{\n\tu32 i;\n\tu32 IoBaseLcd = plgGetIoBase(IO_BASE_LCD);\n\tfor (i = 0; i < 0x64; ++i )\n\t{\n\t\t\t*(u32 *)(IoBaseLcd + 0x204) = topcolor;\n\t\t\t*(u32 *)(IoBaseLcd + 0xA04) = botcolor;\n\t\tsvcSleepThread(5000000); // 0.005 second\n\t}\n\t*(u32*)(IoBaseLcd + 0x204) = 0;\n\t*(u32*)(IoBaseLcd + 0xA04) = 0;\n}\n\nResult\t\tprotect_area_rw(u32 addr, bool color)\n{\n\tHandle\t\ttarget;\n\tResult \t\tres;\n\tPageInfo\tpage_info;\n\tMemInfo\t\tmeminfo;\n\tsvcQueryMemory(&meminfo, &page_info, addr);\n\t//if (right_state(meminfo.state) && ((meminfo.perm & MEMPERM_WRITE) != MEMPERM_WRITE))\n\t\tres = svcControlProcessMemory(getCurrentProcessHandle(), meminfo.base_addr, \\\n\t\t\tmeminfo.base_addr, meminfo.size, 6, 3);\n\t\tif (color)\n\t\t{\t\t\t\n\t\tif (R_SUCCEEDED(res))\n\t\t\tgfxFillColor(3, 0x100FF00);\n\t\telse\n\t\t\tgfxFillColor(3, 0x1FF0000);\n\t\t}\n\treturn res;\n}\n\nvoid \ttest_region(void)\n{\n\tHandle\t\ttarget;\n\tResult \t\tres;\n\tPageInfo\tpage_info = {0};\n\tMemInfo\t\tmeminfo = {0};\n\tsvcQueryMemory(&meminfo, &page_info, addr);\n\t//if (right_state(meminfo.state) && ((meminfo.perm & MEMPERM_WRITE) != MEMPERM_WRITE))\n\tif (meminfo.base_addr == 0x08009000 && meminfo.base_addr + meminfo.size > 0x0803797C)\n\t{\n\t\tif (!(meminfo.per & MEMPERM_WRITE))\n\t\t{\n\t\t\tgfxFillColor(2, 0x1FF0000);\n\t\t}\n\t\telse\n\t\t\tgfxFillColor(2, 0x100FF00);\n\n\t}\n\t\n\n\t\tres = svcControlProcessMemory(getCurrentProcessHandle(), meminfo.base_addr, \\\n\t\t\tmeminfo.base_addr, meminfo.size, 6, 3);\n\t\tif (R_SUCCEEDED(res))\n\t\t\tgfxFillColor(3, 0x100FF00);\n\t\telse\n\t\t\tgfxFillColor(3, 0x1FF0000);\n}\n\nvoid \tcamera_zoom(void)\n{\n\n}\n\nvoid    mem_rwx(void)\n{\n    protect_area_rw(0x08009000);\n    //protect_region(0x08103000);\n    //protect_region(0x08133000);\n    //protect_region(0x0821D000);\n    //protect_region(0x0821E000);\n    //protect_region(0x08225000);\n}\n\nvoid\tmy_menus(void)\n{\t\n\tu32 \ttid;\n\n\ttid = get_tid_low();\n\tmem_rwx();\n\tif (tid == MOON_TID)\n\t\tnew_unselectable_entry(\"Pokemon Moon Plugin V1 Beta3\");\n\telse if (tid == SUN_TID)\n\t\tnew_unselectable_entry(\"Pokemon Sun Plugin V1 Beta3\");\n\telse\n\t{\n\t\tnew_unselectable_entry(\"!!! Unrecognized Title ID !!!\");\n\t\tnew_unselectable_entry(\"!!!  Contact the authors  !!!\");\n\t\treturn;\n\t}\n\t// Unlock stick and touch screen capabilities\n\tset_hid_address(0x10002000);\n\t\n\tnew_spoiler(\"!!!   FAQ   !!!\");\n\t\tnew_separator();\n\t\tnew_unselectable_entry(\"Press Y when the cursor is\");\n\t\tnew_unselectable_entry(\"yellow to find how to use\");\n\t\tnew_unselectable_entry(\"the selected cheat.\");\n\t\tnew_separator();\n\texit_spoiler();\n\t// Menu declaration in pokemon_spawner.c\n\tpokemon_spawner_menu();\n\tnew_spoiler(\"Battle cheats\");\n\t\tnew_spoiler(\"Speed Multiplier\");\n\t\t\tnew_radio_entry(\"Walk/Run Speed x0.5\", speed_multiplier_x05);\n\t\t\tnew_radio_entry(\"Walk/Run Speed x1.0\", speed_multiplier_x1);\n\t\t\tnew_radio_entry(\"Walk/Run Speed x1.375\", speed_multiplier_x1375);\n\t\t\tnew_radio_entry(\"Walk/Run Speed x1.5\", speed_multiplier_x15);\n\t\t\tnew_radio_entry(\"Walk/Run Speed x2.0\", speed_multiplier_x2);\n\t\t\tnew_radio_entry(\"Walk/Run Speed x2.5\", speed_multiplier_x25);\n\t\texit_spoiler();\n\t\tnew_spoiler(\"Experience Modifier\");\n\t\t\tnew_toggle_entry(\"Exp Modifier:\", exp_modifier, EXP_MODIFIER);\n\t\t\tnew_separator();\n\t\t\tnew_entry_index(\"Raise 1%\", raise_1_percent, EXP_RAISE_ONE);\n\t\t\tnew_entry_index(\"Raise 10%\", raise_10_percent, EXP_RAISE_TEN);\n\t\t\tnew_entry_index(\"Raise 100%\", raise_100_percent, EXP_RAISE_HUNDRED);\n\t\t\tnew_entry_index(\"Raise 1000%\", raise_1000_percent, EXP_RAISE_THOUSAND);\n\t\t\tnew_separator();\n\t\t\tupdate_exp_modifier();\n\t\texit_spoiler();\n\t\tnew_toggle_entry(\"Wild pokemons are shiny\", wild_pokemon_shiny, WILD_POKEMON_SHINY);\n\t\tnew_toggle_entry(\"100% Catch rate\", always_catch, ALWAYS_CATCH);\n\t\tnew_entry_note(\"Catch Trainer's Pokemon\", catch_trainers_pokemon_note, catch_trainers_pokemon);\n\t\tnew_entry_note(\"Rematch Trainers\", rematch_trainers_note, rematch_trainers);\n\texit_spoiler();\n\tnew_spoiler(\"Items cheats\");\n\t\tnew_entry(\"Max Money\", max_money);\n\t\tnew_entry_note(\"All Z Crystals\", z_crystals_note, all_z_crystals);\n\t\tnew_entry_note(\"All TM / HM\", all_tm_hm_note, get_all_tm_hm);\n\t\tnew_entry_note(\"All items x950\", all_items_note, all_items_x950);\n\t\tnew_entry_note(\"All medicines\", all_medicines_note, all_medicine);\n\t\tnew_entry_note(\"All berries\", all_berries_note, all_berries);\n\t\tnew_entry_note(\"All male's clothes\", all_clothes_note, all_clothes_male);\n\t\tnew_entry_note(\"All female's clothes\", all_clothes_note, all_clothes_female);\n\texit_spoiler();\n\tnew_spoiler(\"Egg cheats\");\n\t\tnew_toggle_entry(\"Receive egg from daycare\", receive_egg_from_daycare, RECEIVE_EGG_FROM_DAYCARE);\n\t\tnew_toggle_entry(\"Egg instant hatch\", egg_instant_hatch, EGG_INSTANT_HATCH);\n\texit_spoiler();\n\tnew_spoiler(\"Utility\");\n\t\tnew_spoiler(\"QR Codes\");\n\t\t\tnew_toggle_entry(\"Remove wait time\", remove_qr_wait_time, REMOVE_QR_WAIT_TIME);\n\t\t\tnew_toggle_entry(\"Remove QR ban list\", remove_qr_ban_list, REMOVE_QR_BAN_LIST);\n\t\t\tnew_entry(\"QR Scan points x100\", qr_scan_point_100);\n\t\texit_spoiler();\n\t\tnew_toggle_entry(\"No outlines\", no_outlines, NO_OUTLINES);\n\t\tnew_toggle_entry(\"Instant message\", instant_messages, INSTANT_MESSAGES);\n\t\tnew_entry_note(\"Walk through walls\", walk_through_walls_note, walk_through_walls);\n\t\tnew_toggle_entry(\"Rename any pokemon\", rename_any_pokemon, RENAME_ANY_POKEMON);\n\t\tnew_toggle_entry(\"Learn any TM / HM\", learn_any_tm_hm, LEARN_ANY_TM_HM);\n\t\tnew_entry_note(\"Teleporter\", teleporter_note, save_slot_teleporter);\n\t\tnew_entry_index_note(\"Access PC from Options\", access_pc_note, pc_from_option, PC_FROM_OPTION);\n\texit_spoiler();\n\tnew_spoiler(\"Stats cheats\");\n\t\tnew_entry(\"Festival coins x9999999\", festival_coin_9999999);\n\t\tnew_entry(\"Poke Festival coins x9999999\", poke_festival_coin_9999999);\n\t\tnew_entry(\"Thumbs Ups x1500000\", thumbsups_1500000);\n\t\tnew_entry(\"Max Battle Points\", max_battle_points);\n\texit_spoiler();\n\tnew_spoiler(\"Gateway only\");\n\t\tnew_entry(\"Raise all status\", raises_the_all_status_of_a_pokemon_by_6_s);\n\t\tnew_entry(\"Camera zoom\", camera_zoom_outselectlenable_select);\n\t\tnew_entry(\"View IVs\", hold_selectstart_to_view_ivsevs_on_poke);\n\t\tnew_entry(\"Can use Z move many times\", can_use_zmoves_many_times_v10);\n\t\tnew_entry(\"Enable enemy hp pokemon\", enable_view_of_enemy_pokemon_hp_v10);\n\t\tnew_entry(\"Always critical hit\", always_critical_hit_v10);\n\t\tnew_entry(\"Can throw pokeball at trial\", can_throw_pokeball_at_trial_v10);\n\t\tnew_entry(\"Can learn all moves\", can_learn_the_all_moves_in_move_reminder);\n\t\tnew_entry(\"Mega evolution don't cancel\", mega_evolution_does_not_cancel_after_batt);\n\t\tnew_entry(\"Mega evolution don't vanish\", mega_evolution_of_party_pokemon_does_not);\n\texit_spoiler();\n\tnew_unselectable_entry(\"Special thanks to ymyn and\");\n\tnew_unselectable_entry(\"DarkFlare for the cheats !!!\");\n}\n\n\n\n",
			"(u32 index)",
			"read_u32",
			"write_u32",
			"0",
			"other",
			"feet",
			"0",
			"hand",
			"0",
			"leg",
			"hand",
			"HAND",
			"hand",
			"HAND",
			"hand",
			"HAND",
			"hand",
			"FEET",
			"HAND",
			"leg",
			"LEG",
			"HEAD",
			"head",
			"HEAD",
			"head",
			"HEAD",
			"head",
			"HEAD",
			"head",
			"HEAD",
			"g_head",
			"add_",
			", 0 ",
			"AUTO_DISABLE",
			"add_skills,",
			"_arg",
			"EXECUTE_ONCE",
			"XP:00000:00000",
			"LV:00,XP",
			"[LV: 00, EXP: 00000]",
			"(00) (00000)",
			"new_entry_managed",
			"#include \"cheats.h\"\n\nextern u32 g_region;\n\n\nu32     skill_address[] = \n{\n    0x00725a74, //Accessory_Alchemy\n    0x00725a7c, //Alchemy\n    0x00725b4c, //Archery_Skill\n    0x00725ac4, //Armor_Smithing\n    0x00725a8c, //carpentry\n    0x00725a9c, //Cooking\n    0x00725b54, //Dagger_Skill\n    0x00725aa4, //Dash\n    0x00725b24, //Egg_Veggie_Cuisine\n    0x00725b5c, //Earth_Magic\n    0x00725b1c, //Fabric_Tailoring\n    0x00725b64, //Fire_Magic\n    0x00725ab4, //Fishing\n    0x00725abc, //Furniture_Carpentry\n    0x00725a94, //Garment_Tailoring\n    0x00725b8c, //Greatsword_Skill\n    0x00725b74, //Longsword_Skill\n    0x00725b84, //Magic_Skill\n    0x00725adc, //Meat_Cuisine\n    0x00725ae4, //Medicinal_Alchemy\n    0x00725acc, //Metal_Smithing\n    0x00725aec, //Mining\n    0x00725a84, //Misc_Tailoring\n    0x00725afc, //Seafood_Cuisine\n    0x00725b04, //Sewing\n    0x00725b7c, //Shield_Skill\n    0x00725b14, //Smithing\n    0x00725b0c, //Sneathing\n    0x00725b34, //Tools_Carpentry\n    0x00725b94, //Water_Magic\n    0x00725b3c, //Weapon_Carpentry\n    0x00725b2c, //Weapon_Smithing\n    0x00725b44, //Wind_Magic\n    0x00725ad4  //Woodcutting   \n};\n\n/*\n**Skills\n*/\n\nvoid    Accessory_Alchemy(u8 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725a74) <= 0x14 ? READU8(0x00725a74) + 1 : 0x14;\n    WRITEU8(0x00725a74 - g_region, level);\n}\n\nvoid    Alchemy(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725a7c) <= 0x14 ? READU8(0x00725a7c) + 1 : 0x14;\n    WRITEU8(0x00725a7c - g_region, level);\n}\n\nvoid    Misc_Tailoring(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725a84) <= 0x14 ? READU8(0x00725a84) + 1 : 0x14;\n    WRITEU8(0x00725a84 - g_region, level);\n}\n\nvoid    Carpentry(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725a8c) <= 0x14 ? READU8(0x00725a8c) + 1 : 0x14;\n    WRITEU8(0x00725a8c - g_region, level);\n}\n\nvoid    Garment_Tailoring(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725a94) <= 0x14 ? READU8(0x00725a94) + 1 : 0x14;\n    WRITEU8(0x00725a94 - g_region, level);\n}\n\nvoid    Cooking(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725a9c) <= 0x14 ? READU8(0x00725a9c) + 1 : 0x14;\n    WRITEU8(0x00725a9c - g_region, level);\n}\n\nvoid    Dash(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725aa4) <= 0x14 ? READU8(0x00725aa4) + 1 : 0x14;\n    WRITEU8(0x00725aa4 - g_region, level);\n}\n\nvoid    Fishing(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725ab4) <= 0x14 ? READU8(0x00725ab4) + 1 : 0x14;\n    WRITEU8(0x00725ab4 - g_region, level);\n}\n\nvoid    Furniture_Carpentry(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725abc) <= 0x14 ? READU8(0x00725abc) + 1 : 0x14;\n    WRITEU8(0x00725abc - g_region, level);\n}\n\nvoid    Armor_Smithing(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725ac4) <= 0x14 ? READU8(0x00725ac4) + 1 : 0x14;\n    WRITEU8(0x00725ac4 - g_region, level);\n}\n\nvoid    Metal_Smithing(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725acc) <= 0x14 ? READU8(0x00725acc) + 1 : 0x14;\n    WRITEU8(0x00725acc - g_region, level);\n}\n\nvoid    Woodcutting(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725ad4) <= 0x14 ? READU8(0x00725ad4) + 1 : 0x14;\n    WRITEU8(0x00725ad4 - g_region, level);\n}\n\nvoid    Meat_Cuisine(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725adc) <= 0x14 ? READU8(0x00725adc) + 1 : 0x14;\n    WRITEU8(0x00725adc - g_region, level);\n}\n\nvoid    Medicinal_Alchemy(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725ae4) <= 0x14 ? READU8(0x00725ae4) + 1 : 0x14;\n    WRITEU8(0x00725ae4 - g_region, level);\n}\n\nvoid    Mining(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725aec) <= 0x14 ? READU8(0x00725aec) + 1 : 0x14;\n    WRITEU8(0x00725aec - g_region, level);\n}\n\nvoid    Seafood_Cuisine(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725afc) <= 0x14 ? READU8(0x00725afc) + 1 : 0x14;\n    WRITEU8(0x00725afc - g_region, level);\n}\n\nvoid    Sewing(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b04) <= 0x14 ? READU8(0x00725b04) + 1 : 0x14;\n    WRITEU8(0x00725b04 - g_region, level);\n}\n\nvoid    Sneaking(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b0c) <= 0x14 ? READU8(0x00725b0c) + 1 : 0x14;\n    WRITEU8(0x00725b0c - g_region, level);\n}\n\nvoid    Smithing(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b14) <= 0x14 ? READU8(0x00725b14) + 1 : 0x14;\n    WRITEU8(0x00725b14 - g_region, level);\n}\n\nvoid    Fabric_Tailoring(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b1c) <= 0x14 ? READU8(0x00725b1c) + 1 : 0x14;\n    WRITEU8(0x00725b1c - g_region, level);\n}\n\nvoid    Egg_Veggie_Cuisine(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b24) <= 0x14 ? READU8(0x00725b24) + 1 : 0x14;\n    WRITEU8(0x00725b24 - g_region, level);\n}\n\nvoid    Weapon_Smithing(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b2c) <= 0x14 ? READU8(0x00725b2c) + 1 : 0x14;\n    WRITEU8(0x00725b2c - g_region, level);\n}\n\nvoid    Tools_Carpentry(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b34) <= 0x14 ? READU8(0x00725b34) + 1 : 0x14;\n    WRITEU8(0x00725b34 - g_region, level);\n}\n\nvoid    Weapons_Carpentry(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b3c) <= 0x14 ? READU8(0x00725b3c) + 1 : 0x14;\n    WRITEU8(0x00725b3c - g_region, level);\n}\n\nvoid    Wind_Magic(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b44) <= 0x14 ? READU8(0x00725b44) + 1 : 0x14;\n    WRITEU8(0x00725b44 - g_region, level);\n}\n\nvoid    Archery_Skill(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b4c) <= 0x14 ? READU8(0x00725b4c) + 1 : 0x14;\n    WRITEU8(0x00725b4c - g_region, level);\n}\n\nvoid    Dagger_Skill(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b54) <= 0x14 ? READU8(0x00725b54) + 1 : 0x14;\n    WRITEU8(0x00725b54 - g_region, level);\n}\n\nvoid    Earth_Magic(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b5c) <= 0x14 ? READU8(0x00725b5c) + 1 : 0x14;\n    WRITEU8(0x00725b5c - g_region, level);\n}\n\nvoid    Fire_Magic(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b64) <= 0x14 ? READU8(0x00725b64) + 1 : 0x14;\n    WRITEU8(0x00725b64 - g_region, level);\n}\n\nvoid    Longsword_Skill(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b74) <= 0x14 ? READU8(0x00725b74) + 1 : 0x14;\n    WRITEU8(0x00725b74 - g_region, level);\n}\n\nvoid    Shield_Skill(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b7c) <= 0x14 ? READU8(0x00725b7c) + 1 : 0x14;\n    WRITEU8(0x00725b7c - g_region, level);\n}\n\nvoid    Magic_Skill(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b84) <= 0x14 ? READU8(0x00725b84) + 1 : 0x14;\n    WRITEU8(0x00725b84  - g_region, level);\n}\n\nvoid    Greatsword_Skill(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b8c) <= 0x14 ? READU8(0x00725b8c) + 1 : 0x14;\n    WRITEU8(0x00725b8c - g_region, level);\n}\n\nvoid    Water_Magic(u32 level)\n{\n    if(level == 0xFF)\n        level = READU8(0x00725b94) <= 0x14 ? READU8(0x00725b94) + 1 : 0x14;\n    WRITEU8(0x00725b94 - g_region, level);\n}\n\n/*\n**End Skills\n*/\n\nvoid max_skills()\n{\n    Accessory_Alchemy(0x14);\n    Alchemy(0x14);\n    Archery_Skill(0x14);\n    Armor_Smithing(0x14);   \n    Carpentry(0x14);\n    Cooking(0x14);\n    Dagger_Skill(0x14);\n    Dash(0x14);\n    Earth_Magic(0x14);\n    Egg_Veggie_Cuisine(0x14);\n    Fabric_Tailoring(0x14);\n    Fire_Magic(0x14);\n    Fishing(0x14);\n    Furniture_Carpentry(0x14);\n    Garment_Tailoring(0x14);\n    Greatsword_Skill(0x14);\n    Longsword_Skill(0x14);\n    Magic_Skill(0x14);\n    Meat_Cuisine(0x14);\n    Medicinal_Alchemy(0x14);\n    Metal_Smithing(0x14);\n    Mining(0x14);\n    Misc_Tailoring(0x14);   \n    Seafood_Cuisine(0x14);\n    Sewing(0x14);\n    Shield_Skill(0x14);\n    Smithing(0x14);\n    Sneaking(0x14);\n    Tools_Carpentry(0x14);  \n    Water_Magic(0x14);\n    Weapons_Carpentry(0x14);\n    Weapon_Smithing(0x14);\n    Wind_Magic(0x14);\n    Woodcutting(0x14);\n    update_skills();\n}\n\nvoid update_skills()\n{\n    char    buf[5];\n    int     i;\n    int     index = get_index(ACCESSORY);\n    for (i = 0; i < 34; i++)\n    {\n        xsprintf(buf, \"(%05d)\", (int)READ( float, skill_address[i] - 4 - g_region));\n        replace_pattern(\"(*****)\", buf, ACCESSORY + i);\n        xsprintf(buf, \"(%02d)\", READU8(skill_address[i] - g_region));\n        replace_pattern(\"(**)\", buf, ACCESSORY + i);\n    }\n           \n}\n\nvoid add_skills(int skills)\n{\n    int i;\n    float   value;\n\n\n            value  = READ(float, skill_address[i - 24] - g_region - 4);\n            value += 1000;\n            \n            //WRITEU8(skill_address[i - 24] - g_region, READU8(skill_address[i - 24] - g_region) < 0x14 ? READU8(skill_address[i - 24] - g_region) + 1 : 0x14);\n            WRITE( float, skill_address[i - 24] - 4 - g_region, (u32)value);\n            break;\n\n    update_skills();    \n}",
			"#ifndef NOTES_H\n#define NOTES_H\n\n#define NOTE(x) static const char * const x\n\nNOTE(z_crystals_note)               =   \"To get all Z crystals, activate the cheat and press Start + Up in-game.\";\nNOTE(catch_trainers_pokemon_note)   =   \"Activate the cheat then press Start + Up in-game to activate the cheat.\\n\\n\" \\\n                                        \"Press Start + Down to disable it.\\n\" \\\n                                        \"If you don't disable it, you'll rebattle the trainer.\"; \nNOTE(rematch_trainers_note)         =   \"Press L and talk to the trainer to battle him.\";\nNOTE(all_tm_hm_note)                =   \"Press Start + Up in-game to get all TM and all HM.\";\nNOTE(all_items_note)                =   \"Press Start + Up in-game to get all items.\";\nNOTE(all_medicines_note)            =   \"Press Start + Up in-game to get all medicines.\";\nNOTE(all_berries_note)              =   \"Press Start + Up in-game to get all the berries.\";\nNOTE(all_clothes_note)              =   \"Press Start + Up in-game to unlock all clothes.\";\nNOTE(teleporter_note)               =   \"Press L + Up to save your current position in slot 1.\\n\" \\\n                                        \"Press L + Down to be teleported at the position saved in slot 1.\\n\\n\" \\\n                                        \"Press R + Up to save your current position in slot 2.\\n\" \\\n                                        \"Press R + Down to be teleported at the position saved in slot 2.\";\nNOTE(access_pc_note)                =   \"When the cheat is enabled, you'll be able to access the PC from anywhere.\\n\\n\" \\\n                                        \"All you need to do is to go in OPTIONS to get redirected to the PC.\";\nNOTE(walk_through_walls_note)       =   \"Enable the cheat then press R while walking to go through walls.\";\n\n\n#endif\n",
			"add_sharp_child_spoiler_menu(spoiler, ",
			"add_sharp_child_spoiler_menu(midspoil, ",
			"add_sharp_child_spoiler_menu(spoiler, ",
			"tele",
			"^(.+) = ",
			"^(.+)= ",
			"Shirt",
			"Hat",
			"Cap",
			"^(.+)= ",
			"Socks",
			"^(.+)",
			"^(.+)= ",
			"0x.+:",
			"-= 0x28380",
			"0004013000003802",
			"}",
			"{",
			" + offset",
			"index = ",
			"new_spoiler",
			"new_entry",
			"index"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"g_object",
			"void",
			"READU32",
			"WRITEU32",
			"OTHEREDITOR",
			"object",
			"FEETEDITOR",
			"HANDEDITOR",
			"object",
			"LEGEDITOR",
			"object",
			"other",
			"OTHER",
			"feet",
			"FEET",
			"OTHER",
			"other",
			"feet",
			"FEET",
			"other",
			"feet",
			"OTHER",
			"FEET",
			"hand",
			"HAND",
			"hand",
			"HAND",
			"hand",
			"leg",
			"LEG",
			"leg",
			"LEG",
			"BODY",
			"body",
			"BODY",
			"g_body",
			"(FuncPointer)add_",
			", ",
			"",
			"AUTO_DISABLE | PASSARG",
			"add_skills, 0",
			"_managed",
			"AUTO_DISABLE",
			"XP:00000",
			"00, XP:00000",
			"LV:00,XP:00000",
			"[LV: 00, EXP: 00000]",
			"new_entry_arg",
			"new_entry(",
			"    \"",
			"    =",
			"Shirt\",",
			"Hat\",",
			"Cap\",",
			"    \"",
			"Socks\",",
			"^(.+)\"",
			"    \"",
			"",
			"+= 0x22A80",
			"},",
			"\\t{",
			"",
			"new_spoiler_with_note",
			"new_entry_with_note"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "CTRPluginFramework.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 581.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
